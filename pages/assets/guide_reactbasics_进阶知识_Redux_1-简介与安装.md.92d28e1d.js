import{_ as e,o,c as a,S as t}from"./chunks/framework.6bb1a485.js";const s="/pages/assets/Flux思想.12931680.jpg",r="/pages/assets/redux三大设计原则.fb1025ae.jpg",c="/pages/assets/redux工作流.c818f1e2.jpg",b=JSON.parse('{"title":"进阶知识 - Redux","description":"","frontmatter":{},"headers":[],"relativePath":"guide/reactbasics/进阶知识/Redux/1-简介与安装.md","filePath":"guide/reactbasics/进阶知识/Redux/1-简介与安装.md"}'),d={name:"guide/reactbasics/进阶知识/Redux/1-简介与安装.md"},l=t('<h1 id="进阶知识-redux" tabindex="-1">进阶知识 - Redux <a class="header-anchor" href="#进阶知识-redux" aria-label="Permalink to &quot;进阶知识 - Redux&quot;">​</a></h1><h3 id="flux-与-redux" tabindex="-1">Flux 与 Redux <a class="header-anchor" href="#flux-与-redux" aria-label="Permalink to &quot;Flux 与 Redux&quot;">​</a></h3><ul><li><strong>Flux</strong> :</li></ul><blockquote><p><code>Flux</code> 是一种架构思想，专门解决软件的结构问题。 这种思想衍生出来多种全局数据状态共享种方案(至少15种)，Flux地址:<a href="https:/igithub.com/voronianski/flux-comparison" target="_blank" rel="noreferrer">&#39;https:/igithub.com/voronianski/flux-comparison&#39;</a></p></blockquote><p><img src="'+s+'" alt=""></p><ul><li><strong>Redux</strong> :</li></ul><blockquote><p><code>Redux</code> 是 Flux 架构思想下衍生出来的一种方案，可以全局管理数据，操作方法。简单快捷好上手</p></blockquote><h3 id="redux" tabindex="-1">Redux <a class="header-anchor" href="#redux" aria-label="Permalink to &quot;Redux&quot;">​</a></h3><ul><li><strong>简介</strong></li></ul><p><code>redux</code> 最主要的作用是应用状态的管理。简单来说, <code>redux</code> 用一个单独的常亮状态数据数(<code>state对象</code>),保存这一整个应用的状态，这个对象不能直接被改变。一旦有某些数据被改变，一个新的<code>state对象</code> 就会被创建(使用 <code>actions</code> 和 <code>reducers</code>),这样就可以进行数据追踪，完成<code>Redux</code>的工作流啦</p><p>其实就是<code>Reducer + 订阅发布模式</code> 的结合</p><p><img src="'+r+'" alt=""></p><ul><li><strong>安装</strong></li></ul><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">npm install redux</span></span></code></pre></div><ul><li><strong>redux工作流</strong><img src="'+c+'" alt=""></li></ul>',15),u=[l];function i(n,p,x,_,g,h){return o(),a("div",null,u)}const f=e(d,[["render",i]]);export{b as __pageData,f as default};
