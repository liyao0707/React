import{_ as t,o as e,c as a,S as i}from"./chunks/framework.6bb1a485.js";const b=JSON.parse('{"title":"React 入门知识","description":"","frontmatter":{},"headers":[],"relativePath":"guide/reactbasics/index.md","filePath":"guide/reactbasics/index.md"}'),l={name:"guide/reactbasics/index.md"},c=i('<h1 id="react-入门知识" tabindex="-1">React 入门知识 <a class="header-anchor" href="#react-入门知识" aria-label="Permalink to &quot;React 入门知识&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title"><strong>为什么要学习React?</strong></p><ol><li>声明式设计</li><li>高效灵活</li><li>组件化</li><li>单向数据流</li><li>虚拟dom</li><li>其它原因等等</li></ol></div><h3 id="react介绍" tabindex="-1">React介绍 <a class="header-anchor" href="#react介绍" aria-label="Permalink to &quot;React介绍&quot;">​</a></h3><ol><li><strong>React起源</strong></li></ol><blockquote><p>React起源Facebook的内部项目，但应该公司对市场上的MVC框架 不满意，就自己开发了一套,做出来之后发现好用，就在2013年5月开源啦。</p></blockquote><ol start="2"><li><strong>React与传统MVC的关系</strong></li></ol><blockquote><p>React 不是一个完整的MVC框架，他最多用到了MVC中的(view视图层)，React并不非常认可MVC开发模式，React将界面分成了各个独立的小块，每一块就是组件，这些组件之间可以组合、嵌套，就组成了我们的页面</p></blockquote><ol start="3"><li><strong>React的特性</strong></li></ol><div class="tip custom-block"><p class="custom-block-title">特性</p><ol><li>声明式设计- React采用声明范式，可以轻松描述应用</li><li>高效- React通过对DOM的模拟(虚拟DOM)，最大限度减少与DOM的交互</li><li>灵活- React可以跟已知的库或框架很好的配合</li><li>JSX- 是JavaScript的语法扩展</li><li>组件- 通过React构建组件 使代码得到复用，更好的应用在大型项目中</li><li>单向响应的数据流- React实现单向数据流，从而减少了重复的代码，比传统数据绑定更简单</li></ol></div>',9),o=[c];function s(r,n,d,_,p,u){return e(),a("div",null,o)}const h=t(l,[["render",s]]);export{b as __pageData,h as default};
