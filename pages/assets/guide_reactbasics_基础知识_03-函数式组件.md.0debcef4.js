import{_ as a,o as e,c as t,S as s}from"./chunks/framework.6bb1a485.js";const h=JSON.parse('{"title":"基础知识-函数式组件","description":"","frontmatter":{},"headers":[],"relativePath":"guide/reactbasics/基础知识/03-函数式组件.md","filePath":"guide/reactbasics/基础知识/03-函数式组件.md"}'),o={name:"guide/reactbasics/基础知识/03-函数式组件.md"},n=s(`<h1 id="基础知识-函数式组件" tabindex="-1">基础知识-函数式组件 <a class="header-anchor" href="#基础知识-函数式组件" aria-label="Permalink to &quot;基础知识-函数式组件&quot;">​</a></h1><h3 id="函数式组件" tabindex="-1">函数式组件 <a class="header-anchor" href="#函数式组件" aria-label="Permalink to &quot;函数式组件&quot;">​</a></h3><blockquote><p>在函数里面直接return <code>标签</code> | <code>内容</code> 就可以啦</p></blockquote><div class="tip custom-block"><p class="custom-block-title">函数式组件用法</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">import React from &#39;react&#39;;</span></span>
<span class="line"><span style="color:#A6ACCD;">import ReactDom from &#39;react-dom&#39;;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">&lt;!-- 函数式组件 --&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">const App = () =&gt; (&lt;div&gt;我是函数式组件&lt;/div&gt;)</span></span>
<span class="line"><span style="color:#A6ACCD;">&lt;!-- 构建渲染DOM树 --&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">ReactDom.render(&lt;App&gt;&lt;/App&gt;,document.getElementById(&#39;root&#39;)) //写法一</span></span>
<span class="line"><span style="color:#A6ACCD;">ReactDom.render(&lt;App/&gt;,document.getElementById(&#39;root&#39;)) //写法二</span></span></code></pre></div></div><h4 id="注意事项" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项" aria-label="Permalink to &quot;注意事项&quot;">​</a></h4><blockquote><p>同类组件一样 在导入 或者 声明 的时候最好首字母大写</p></blockquote><ul><li><strong>无状态组件</strong> 在 <code>React 16.8版本之前</code> 函数组件又叫 <code>无状态组件</code> 在16.8之前有些事情函数式组件还做不了</li><li><strong>ReactHooks</strong> 在 <code>React 16.8版本之后</code> 出现了 <code>React Hooks</code> 从而解决了一些16.8版本之前 函数式无状态的问题</li></ul>`,7),c=[n];function l(p,r,i,d,_,m){return e(),t("div",null,c)}const A=a(o,[["render",l]]);export{h as __pageData,A as default};
